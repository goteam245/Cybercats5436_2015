package Auton;

public class Test {
	public static int iterator = 0;
	private static double[] yValues = { 0.05, 0.1, 0.15000000000000002, 0.2,
			0.25, 0.3, 0.35, 0.39999999999999997, 0.44999999999999996,
			0.49999999999999994, 0.5499999999999999, 0.5511811023622047,
			0.5011811023622047, 0.5511811023622047, 0.5011811023622047,
			0.5511811023622047, 0.5011811023622047, 0.5511811023622047,
			0.5011811023622047, 0.5511811023622047, 0.5011811023622047,
			0.5511811023622047, 0.5011811023622047, 0.48031496062992124,
			0.47244094488188976, 0.4645669291338583, 0.4566929133858268,
			0.4066929133858268, 0.4566929133858268, 0.4066929133858268,
			0.4566929133858268, 0.4066929133858268, 0.4566929133858268,
			0.4066929133858268, 0.4566929133858268, 0.4066929133858268,
			0.4566929133858268, 0.4066929133858268, 0.4566929133858268,
			0.4066929133858268, 0.4566929133858268, 0.4066929133858268,
			0.4566929133858268, 0.4066929133858268, 0.4566929133858268,
			0.4066929133858268, 0.4566929133858268, 0.4409448818897638,
			0.4251968503937008, 0.3779527559055118, 0.3543307086614173,
			0.33858267716535434, 0.3228346456692913, 0.27283464566929133,
			0.3228346456692913, 0.27283464566929133, 0.3228346456692913,
			0.27283464566929133, 0.3228346456692913, 0.27283464566929133,
			0.3228346456692913, 0.27283464566929133, 0.3228346456692913,
			0.27283464566929133, 0.3228346456692913, 0.27283464566929133,
			0.3228346456692913, 0.27283464566929133, 0.3228346456692913,
			0.27283464566929133, 0.3228346456692913, 0.27283464566929133,
			0.3228346456692913, 0.27283464566929133, 0.3228346456692913,
			0.27283464566929133, 0.3228346456692913, 0.27283464566929133,
			0.3228346456692913, 0.27283464566929133, 0.3228346456692913,
			0.27283464566929133, 0.3228346456692913, 0.27283464566929133,
			0.3228346456692913, 0.27283464566929133, 0.3228346456692913,
			0.27283464566929133, 0.3228346456692913, 0.27283464566929133,
			0.3228346456692913, 0.27283464566929133, 0.3228346456692913,
			0.27283464566929133, 0.3228346456692913, 0.27283464566929133,
			0.3228346456692913, 0.27283464566929133, 0.3228346456692913,
			0.27283464566929133, 0.3228346456692913, 0.27283464566929133,
			0.3228346456692913, 0.27283464566929133, 0.3228346456692913,
			0.27283464566929133, 0.3228346456692913, 0.27283464566929133,
			0.3228346456692913, 0.27283464566929133, 0.3228346456692913,
			0.27283464566929133, 0.3228346456692913, 0.27283464566929133,
			0.3228346456692913, 0.27283464566929133, 0.3228346456692913,
			0.27283464566929133, 0.3228346456692913, 0.27283464566929133,
			0.3228346456692913, 0.27283464566929133, 0.3228346456692913,
			0.27283464566929133, 0.3228346456692913, 0.27283464566929133,
			0.3228346456692913, 0.27283464566929133, 0.3228346456692913,
			0.27283464566929133, 0.3228346456692913, 0.27283464566929133,
			0.3228346456692913, 0.27283464566929133, 0.3228346456692913,
			0.27283464566929133, 0.3228346456692913, 0.27283464566929133,
			0.3228346456692913, 0.27283464566929133, 0.3228346456692913,
			0.27283464566929133, 0.3228346456692913, 0.27283464566929133,
			0.3228346456692913, 0.27283464566929133, 0.3228346456692913,
			0.27283464566929133, 0.3228346456692913, 0.27283464566929133,
			0.3228346456692913, 0.27283464566929133, 0.3228346456692913,
			0.27283464566929133, 0.3228346456692913, 0.27283464566929133,
			0.3228346456692913, 0.27283464566929133, 0.3228346456692913,
			0.27283464566929133, 0.3228346456692913, 0.27283464566929133,
			0.3228346456692913, 0.27283464566929133, 0.3228346456692913,
			0.27283464566929133, 0.3228346456692913, 0.27283464566929133,
			0.3228346456692913, 0.27283464566929133, 0.3228346456692913,
			0.27283464566929133, 0.3228346456692913, 0.27283464566929133,
			0.3228346456692913, 0.27283464566929133, 0.3228346456692913,
			0.27283464566929133, 0.3228346456692913, 0.27283464566929133,
			0.3228346456692913, 0.27283464566929133, 0.3228346456692913,
			0.27283464566929133, 0.3228346456692913, 0.27283464566929133,
			0.3228346456692913, 0.27283464566929133, 0.3228346456692913,
			0.27283464566929133, 0.3228346456692913, 0.27283464566929133,
			0.3228346456692913, 0.27283464566929133, 0.3228346456692913,
			0.27283464566929133, 0.3228346456692913, 0.27283464566929133,
			0.3228346456692913, 0.27283464566929133, 0.3228346456692913,
			0.27283464566929133, 0.3228346456692913, 0.27283464566929133,
			/*0.3228346456692913, 0.27283464566929133, 0.3228346456692913,
			0.27283464566929133, 0.3228346456692913, 0.27283464566929133,
			0.3228346456692913, 0.27283464566929133, 0.3228346456692913,
			0.27283464566929133, 0.3228346456692913, 0.27283464566929133,*/
			0.3228346456692913, 0.27283464566929133, 0.3228346456692913,
			0.27283464566929133, 0.3228346456692913, 0.27283464566929133,
			0.22283464566929134, 0.17283464566929135, 0.12283464566929135,
			0.07283464566929135, 0.022834645669291345, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.05,
			-0.1, -0.15000000000000002, -0.2, -0.25, -0.3, -0.35, -0.3984375,
			-0.3484375, -0.3984375, -0.3484375, -0.3984375, -0.3484375,
			-0.3828125, -0.359375, -0.309375, -0.3046875, -0.2546875,
			-0.20468750000000002, -0.15468750000000003, -0.10468750000000003,
			-0.05468750000000003, -0.004687500000000025, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,/* -0.05,
			-0.1, -0.15000000000000002, -0.2, -0.2421875, -0.1921875,
			-0.2421875, -0.25, -0.2, -0.25, -0.2, -0.25, -0.2, -0.25, -0.2,
			-0.25, -0.2, -0.25, -0.2578125, -0.2078125, -0.2578125, -0.2078125,
			-0.2578125, -0.2078125, -0.2578125, -0.2078125, -0.2578125,
			-0.2078125, -0.2578125, -0.2078125, -0.2578125, -0.2078125,
			-0.15781250000000002, -0.10781250000000002, -0.05781250000000002,
			-0.007812500000000014, */0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 };
	private static double[] xValues = { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, /*0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			*//*0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,*/ 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0 };
	private static double rotationValues[] = { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, /*0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, */0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.2125984251968504, 0.25196850393700787,
			0.2677165354330709, 0.28346456692913385, 0.28346456692913385,
			0.28346456692913385, 0.28346456692913385, 0.28346456692913385,
			0.33858267716535434, 0.36220472440944884, 0.36220472440944884,
			0.36220472440944884, 0.36220472440944884, 0.36220472440944884,
			0.36220472440944884, 0.36220472440944884, 0.36220472440944884,
			0.36220472440944884, 0.36220472440944884, 0.36220472440944884,
			0.36220472440944884, 0.36220472440944884, 0.36220472440944884,
			0.36220472440944884, 0.36220472440944884, 0.36220472440944884,
			0.36220472440944884, 0.36220472440944884, 0.36220472440944884,
			0.36220472440944884, 0.36220472440944884, 0.36220472440944884,
			0.36220472440944884, 0.36220472440944884, 0.36220472440944884,
			0.36220472440944884, 0.36220472440944884, 0.36220472440944884,
			0.36220472440944884, 0.36220472440944884, 0.36220472440944884,
			0.36220472440944884, 0.36220472440944884, 0.36220472440944884,
			0.36220472440944884, 0.36220472440944884, 0.36220472440944884,
			0.36220472440944884, 0.36220472440944884, 0.36220472440944884,
			0.36220472440944884, 0.36220472440944884, 0.36220472440944884,
			0.36220472440944884, 0.36220472440944884, 0.36220472440944884,
			0.36220472440944884, 0.36220472440944884, 0.36220472440944884,
			0.36220472440944884, 0.36220472440944884, 0.36220472440944884,
			0.36220472440944884, 0.36220472440944884, 0.36220472440944884,
			0.36220472440944884, 0.3543307086614173, 0.3543307086614173,
			0.3543307086614173, 0.3543307086614173, 0.3543307086614173,
			0.3543307086614173, 0.3543307086614173, 0.3464566929133858,
			0.33858267716535434, 0.31496062992125984, 0.2992125984251969,
			0.28346456692913385, 0.2677165354330709, 0.25984251968503935,
			0.25984251968503935, 0.25984251968503935, 0.25984251968503935,
			0.25984251968503935, 0.25984251968503935, 0.25984251968503935,
			0.25984251968503935, 0.25984251968503935, 0.2204724409448819, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			/*0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,*/ 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
			0.0, 0.0, 0.0, 0.0, 0.0 };

	public static void update() {
		if (iterator < xValues.length) {
			Drive.Drive.DriveSpeed(xValues[iterator], yValues[iterator],
					rotationValues[iterator]);
		} else {
			Drive.Drive.DriveSpeed(0, 0, 0);
		}
		iterator++;
	}
}
